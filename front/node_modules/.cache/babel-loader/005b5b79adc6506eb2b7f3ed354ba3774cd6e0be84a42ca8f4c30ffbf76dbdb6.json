{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg-blue-600 text-white p-4\"\n};\nconst _hoisted_2 = {\n  class: \"container mx-auto flex justify-between items-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RouterLink = _resolveComponent(\"RouterLink\");\n  return _openBlock(), _createElementBlock(\"header\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-bold\"\n  }, \"InfoService\", -1 /* HOISTED */)), _createElementVNode(\"nav\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredLinks, (link, index) => {\n    return _openBlock(), _createBlock(_component_RouterLink, {\n      key: index,\n      to: link.path,\n      class: _normalizeClass([\"mr-4 hover:underline cursor-pointer\", {\n        'font-bold': $setup.isActive(link.path)\n      }])\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(link.name), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\", \"class\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","filteredLinks","link","index","_createBlock","_component_RouterLink","key","to","path","_normalizeClass","isActive","default","_withCtx","_createTextVNode","_toDisplayString","name","_"],"sources":["/home/abd/www/zadaniya/infoservice/front/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header class=\"bg-blue-600 text-white p-4\">\n    <div class=\"container mx-auto flex justify-between items-center\">\n      <h1 class=\"text-2xl font-bold\">InfoService</h1>\n      <nav>\n        <RouterLink\n          v-for=\"(link, index) in filteredLinks\"\n          :key=\"index\"\n          :to=\"link.path\"\n          class=\"mr-4 hover:underline cursor-pointer\"\n          :class=\"{ 'font-bold': isActive(link.path) }\"\n        >\n          {{ link.name }}\n        </RouterLink>\n      </nav>\n    </div>\n  </header>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRoute } from 'vue-router';\n\n// Get the current route\nconst route = useRoute();\n\n// Helper function to determine if the link is active\nconst isActive = (path) => route.path === path;\n\n// Define all navigation links\nconst links = [\n  { name: 'Home', path: '/' },\n  { name: 'Admin', path: '/admin' },\n  { name: 'Login', path: '/login' },\n  { name: 'Register', path: '/register' },\n];\n\n// Compute filtered links based on user authentication\nconst filteredLinks = computed(() => {\n  const user = localStorage.getItem('user');\n  return links.filter(link => {\n    if (link.path === '/admin') {\n      return !!user; // Show Admin link only if user is authenticated\n    }\n    if (link.path === '/register' ) {\n      return !user; // Show Register link only if user is not authenticated\n    }\n    return true; // Show other links regardless of authentication\n  });\n});\n</script>\n"],"mappings":";;EACUA,KAAK,EAAC;AAA4B;;EACnCA,KAAK,EAAC;AAAqD;;;uBADlEC,mBAAA,CAeS,UAfTC,UAeS,GAdPC,mBAAA,CAaM,OAbNC,UAaM,G,0BAZJD,mBAAA,CAA+C;IAA3CH,KAAK,EAAC;EAAoB,GAAC,aAAW,sBAC1CG,mBAAA,CAUM,e,kBATJF,mBAAA,CAQaI,SAAA,QAbrBC,WAAA,CAMkCC,MAAA,CAAAC,aAAa,EAN/C,CAMkBC,IAAI,EAAEC,KAAK;yBADrBC,YAAA,CAQaC,qBAAA;MANVC,GAAG,EAAEH,KAAK;MACVI,EAAE,EAAEL,IAAI,CAACM,IAAI;MACdf,KAAK,EATfgB,eAAA,EASgB,qCAAqC;QAAA,aACpBT,MAAA,CAAAU,QAAQ,CAACR,IAAI,CAACM,IAAI;MAAA;;MAVnDG,OAAA,EAAAC,QAAA,CAYU,MAAe,CAZzBC,gBAAA,CAAAC,gBAAA,CAYaZ,IAAI,CAACa,IAAI,iB;MAZtBC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}