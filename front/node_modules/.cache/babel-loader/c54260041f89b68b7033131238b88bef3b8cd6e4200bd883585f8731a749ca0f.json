{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'ResetPasswordPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n\n    // Get email and token from URL query parameters\n    const email = route.query.email;\n    const token = route.query.token;\n    const password = ref('');\n    const confirmPassword = ref('');\n    const error = ref('');\n    const success = ref('');\n\n    // Function to handle the password reset form submission\n    const submitResetPassword = async () => {\n      error.value = ''; // Reset error message\n      success.value = ''; // Reset success message\n\n      // Simple form validation\n      if (!password.value || !confirmPassword.value) {\n        error.value = 'Please fill in all fields.';\n        return;\n      }\n      if (password.value !== confirmPassword.value) {\n        error.value = 'Passwords do not match.';\n        return;\n      }\n\n      // Send password reset request to the API\n      try {\n        const response = await axios.post('/reset-password', {\n          email: email,\n          password: password.value,\n          token: token\n        });\n        localStorage.setItem('authToken', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        console.log(response.data);\n        router.push('/admin').then(() => {\n          setTimeout(() => {\n            window.location.reload();\n          }, 300);\n        });\n      } catch (err) {\n        console.log(err);\n        error.value = err.response?.data?.message || 'Login failed';\n      }\n      try {\n        const response = await fetch('/api/reset-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password.value,\n            token: token\n          })\n        });\n        if (!response.ok) {\n          const result = await response.json();\n          throw new Error(result.message || 'Error resetting password.');\n        }\n        success.value = 'Password reset successful.';\n      } catch (error) {\n        error.value = error.message;\n      }\n    };\n    const __returned__ = {\n      route,\n      email,\n      token,\n      password,\n      confirmPassword,\n      error,\n      success,\n      submitResetPassword,\n      ref,\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRoute","route","email","query","token","password","confirmPassword","error","success","submitResetPassword","value","response","axios","post","localStorage","setItem","data","JSON","stringify","user","console","log","router","push","then","setTimeout","window","location","reload","err","message","fetch","method","headers","body","ok","result","json","Error"],"sources":["/home/abd/www/zadaniya/infoservice/front/src/pages/ResetPasswordPage.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-md mx-auto mt-10 p-6 bg-white shadow-md rounded\">\n    <h1 class=\"text-2xl font-bold mb-6 text-center\">Reset Password</h1>\n\n    <!-- New Password Input -->\n    <div class=\"mb-4\">\n      <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">New Password</label>\n      <input\n        type=\"password\"\n        v-model=\"password\"\n        id=\"password\"\n        class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n        placeholder=\"Enter your new password\"\n      />\n    </div>\n\n    <!-- Confirm Password Input -->\n    <div class=\"mb-4\">\n      <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n      <input\n        type=\"password\"\n        v-model=\"confirmPassword\"\n        id=\"confirmPassword\"\n        class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n        placeholder=\"Confirm your new password\"\n      />\n    </div>\n\n    <!-- Submit Button -->\n    <div>\n      <button\n        @click=\"submitResetPassword\"\n        class=\"w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n      >\n        Reset Password\n      </button>\n    </div>\n\n    <p v-if=\"error\" class=\"text-red-500 mt-4\">{{ error }}</p>\n    <p v-if=\"success\" class=\"text-green-500 mt-4\">{{ success }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRoute } from 'vue-router';\n\nconst route = useRoute();\n\n// Get email and token from URL query parameters\nconst email = route.query.email;\nconst token = route.query.token;\n\nconst password = ref('');\nconst confirmPassword = ref('');\nconst error = ref('');\nconst success = ref('');\n\n// Function to handle the password reset form submission\nconst submitResetPassword = async () => {\n  error.value = '';  // Reset error message\n  success.value = '';  // Reset success message\n\n  // Simple form validation\n  if (!password.value || !confirmPassword.value) {\n    error.value = 'Please fill in all fields.';\n    return;\n  }\n  if (password.value !== confirmPassword.value) {\n    error.value = 'Passwords do not match.';\n    return;\n  }\n\n  // Send password reset request to the API\n  try {\n    const response = await axios.post('/reset-password', {\n      email: email,\n        password: password.value,\n        token: token,\n    });\n    localStorage.setItem('authToken', response.data.token);\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n    console.log(response.data);\n    \n    router.push('/admin').then(() => {\n      setTimeout(() => {\n        window.location.reload();\n      }, 300)\n    });\n\n  } catch (err) {\n    console.log(err);\n    error.value = err.response?.data?.message || 'Login failed';\n  }\n  try {\n    const response = await fetch('/api/reset-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password.value,\n        token: token,\n      }),\n    });\n\n    if (!response.ok) {\n      const result = await response.json();\n      throw new Error(result.message || 'Error resetting password.');\n    }\n\n    success.value = 'Password reset successful.';\n  } catch (error) {\n    error.value = error.message;\n  }\n};\n</script>\n\n"],"mappings":";AA4CA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,YAAY;;;;;;;IAErC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAME,KAAK,GAAGD,KAAK,CAACE,KAAK,CAACD,KAAK;IAC/B,MAAME,KAAK,GAAGH,KAAK,CAACE,KAAK,CAACC,KAAK;IAE/B,MAAMC,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,eAAe,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMQ,KAAK,GAAGR,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMS,OAAO,GAAGT,GAAG,CAAC,EAAE,CAAC;;IAEvB;IACA,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtCF,KAAK,CAACG,KAAK,GAAG,EAAE,CAAC,CAAE;MACnBF,OAAO,CAACE,KAAK,GAAG,EAAE,CAAC,CAAE;;MAErB;MACA,IAAI,CAACL,QAAQ,CAACK,KAAK,IAAI,CAACJ,eAAe,CAACI,KAAK,EAAE;QAC7CH,KAAK,CAACG,KAAK,GAAG,4BAA4B;QAC1C;MACF;MACA,IAAIL,QAAQ,CAACK,KAAK,KAAKJ,eAAe,CAACI,KAAK,EAAE;QAC5CH,KAAK,CAACG,KAAK,GAAG,yBAAyB;QACvC;MACF;;MAEA;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,iBAAiB,EAAE;UACnDX,KAAK,EAAEA,KAAK;UACVG,QAAQ,EAAEA,QAAQ,CAACK,KAAK;UACxBN,KAAK,EAAEA;QACX,CAAC,CAAC;QACFU,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,QAAQ,CAACK,IAAI,CAACZ,KAAK,CAAC;QACtDU,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACK,IAAI,CAACG,IAAI,CAAC,CAAC;QAChEC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACK,IAAI,CAAC;QAE1BM,MAAM,CAACC,IAAI,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,MAAM;UAC/BC,UAAU,CAAC,MAAM;YACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC1B,CAAC,EAAE,GAAG,CAAC;QACT,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;QAChBtB,KAAK,CAACG,KAAK,GAAGmB,GAAG,CAAClB,QAAQ,EAAEK,IAAI,EAAEc,OAAO,IAAI,cAAc;MAC7D;MACA,IAAI;QACF,MAAMnB,QAAQ,GAAG,MAAMoB,KAAK,CAAC,qBAAqB,EAAE;UAClDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEjB,IAAI,CAACC,SAAS,CAAC;YACnBhB,KAAK,EAAEA,KAAK;YACZG,QAAQ,EAAEA,QAAQ,CAACK,KAAK;YACxBN,KAAK,EAAEA;UACT,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACO,QAAQ,CAACwB,EAAE,EAAE;UAChB,MAAMC,MAAM,GAAG,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC;UACpC,MAAM,IAAIC,KAAK,CAACF,MAAM,CAACN,OAAO,IAAI,2BAA2B,CAAC;QAChE;QAEAtB,OAAO,CAACE,KAAK,GAAG,4BAA4B;MAC9C,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdA,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACuB,OAAO;MAC7B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}