{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from '@/axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'RegisterPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const name = ref('');\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const router = useRouter();\n    const register = async () => {\n      try {\n        await axios.post('/register', {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n          password_confirmation: password.value\n        });\n        alert('Registration successful, please check your email for verification.');\n        router.push('/login');\n      } catch (err) {\n        error.value = err.response?.data?.message || 'Registration failed';\n      }\n    };\n    const __returned__ = {\n      name,\n      email,\n      password,\n      error,\n      router,\n      register,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","email","password","error","router","register","post","value","password_confirmation","alert","push","err","response","data","message"],"sources":["/home/abd/www/zadaniya/infoservice/front/src/pages/RegisterPage.vue"],"sourcesContent":["<template>\n  <Layout>\n    <div class=\"container mx-auto p-4\">\n      <h1 class=\"text-2xl font-bold mb-4\">Register</h1>\n      <form @submit.prevent=\"register\">\n        <div class=\"mb-4\">\n          <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Name</label>\n          <input v-model=\"name\" id=\"name\" type=\"text\" required class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm\"/>\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\n          <input v-model=\"email\" id=\"email\" type=\"email\" required class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm\"/>\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password</label>\n          <input v-model=\"password\" id=\"password\" type=\"password\" required class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm\"/>\n        </div>\n        <button type=\"submit\" class=\"bg-blue-600 text-white px-4 py-2 rounded\">Register</button>\n        <div v-if=\"error\" class=\"mt-4 text-red-600\">{{ error }}</div>\n      </form>\n    </div>\n  </Layout>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport axios from '@/axios';\nimport { useRouter } from 'vue-router';\n\nconst name = ref('');\nconst email = ref('');\nconst password = ref('');\nconst error = ref('');\nconst router = useRouter();\n\nconst register = async () => {\n  try {\n    await axios.post('/register', {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n      password_confirmation: password.value,\n    });\n    alert('Registration successful, please check your email for verification.');\n    router.push('/login');\n  } catch (err) {\n    error.value = err.response?.data?.message || 'Registration failed';\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";AAyBA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,IAAI,GAAGH,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMI,KAAK,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,KAAK,GAAGN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,MAAM,GAAGL,SAAS,CAAC,CAAC;IAE1B,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMP,KAAK,CAACQ,IAAI,CAAC,WAAW,EAAE;UAC5BN,IAAI,EAAEA,IAAI,CAACO,KAAK;UAChBN,KAAK,EAAEA,KAAK,CAACM,KAAK;UAClBL,QAAQ,EAAEA,QAAQ,CAACK,KAAK;UACxBC,qBAAqB,EAAEN,QAAQ,CAACK;QAClC,CAAC,CAAC;QACFE,KAAK,CAAC,oEAAoE,CAAC;QAC3EL,MAAM,CAACM,IAAI,CAAC,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,KAAK,CAACI,KAAK,GAAGI,GAAG,CAACC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,IAAI,qBAAqB;MACpE;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}