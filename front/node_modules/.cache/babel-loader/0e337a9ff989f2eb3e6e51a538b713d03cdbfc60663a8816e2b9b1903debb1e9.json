{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mx-auto p-4\"\n};\nconst _hoisted_2 = {\n  class: \"text-2xl\"\n};\nconst _hoisted_3 = {\n  class: \"font-bold\"\n};\nconst _hoisted_4 = {\n  class: \"flex flex-col gap-1\"\n};\nconst _hoisted_5 = {\n  class: \"font-bold\"\n};\nconst _hoisted_6 = {\n  class: \"text-green-500\"\n};\nconst _hoisted_7 = {\n  class: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\"\n};\nconst _hoisted_8 = {\n  class: \"text-red-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Layout = _resolveComponent(\"Layout\");\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, [_cache[0] || (_cache[0] = _createTextVNode(\"Welcome, \")), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($setup.user.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createTextVNode(\"Your email: \")), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.user.email), 1 /* TEXT */)]), !$setup.user.email_verified_at ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_cache[2] || (_cache[2] = _createElementVNode(\"p\", {\n      class: \"text-red-600\"\n    }, \"Your email is not verified.\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n      onClick: $setup.resendConfirmationEmail,\n      class: \"bg-yellow-600 text-white px-3 max-w-[300px] py-2 rounded hover:bg-yellow-700 mt-2 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-opacity-50\"\n    }, \"Resend Confirmation Email\"), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($setup.success), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n      class: \"flex flex-col sm:flex-row gap-1 max-w-[300px]\"\n    }, [_createElementVNode(\"button\", {\n      onClick: $setup.confirmResetPassword,\n      class: \"bg-blue-600 text-white px-3 py-2 rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 w-full\"\n    }, \"Reset Password\"), _createElementVNode(\"button\", {\n      onClick: $setup.confirmLogout,\n      class: \"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 w-full\"\n    }, \"Logout\")])]), _cache[8] || (_cache[8] = _createElementVNode(\"h2\", {\n      class: \"text-xl font-bold mb-4 mt-4\"\n    }, \"Leads:\", -1 /* HOISTED */)), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n      v: \"\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.leads, lead => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: lead.id,\n        class: \"border p-4 rounded-lg shadow-md overflow-hidden break-words\"\n      }, [_createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"First name:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(lead.first_name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Last name:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(lead.last_name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(lead.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Phone number:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(lead.phone), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Message:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(lead.message), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($setup.error), 1 /* TEXT */)])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_Layout","default","_withCtx","_createElementVNode","_hoisted_1","_hoisted_2","_createTextVNode","_hoisted_3","_toDisplayString","$setup","user","name","_hoisted_4","_hoisted_5","email","email_verified_at","_createElementBlock","_Fragment","key","onClick","resendConfirmationEmail","_hoisted_6","success","_createCommentVNode","confirmResetPassword","confirmLogout","v","_hoisted_7","_renderList","leads","lead","id","first_name","last_name","phone","message","_hoisted_8","error","_"],"sources":["/home/abd/www/zadaniya/infoservice/front/src/pages/AdminPage.vue"],"sourcesContent":["<template>\n  <Layout>\n    <div class=\"container mx-auto p-4\">\n      <h1 class=\"text-2xl\">Welcome, <span class=\"font-bold\">{{user.name}}</span></h1>\n      <div class=\"flex flex-col gap-1\">\n        <p>Your email: <span class=\"font-bold\">{{ user.email }}</span></p>\n        <template v-if=\"!user.email_verified_at\">\n          <p class=\"text-red-600\">Your email is not verified.</p>\n          <button @click=\"resendConfirmationEmail\" class=\"bg-yellow-600 text-white px-3 max-w-[300px]\n          py-2 rounded hover:bg-yellow-700 mt-2 focus:outline-none focus:ring-2 focus:ring-yellow-500 \n          focus:ring-opacity-50\">Resend Confirmation Email</button>\n          <p class=\"text-green-500\">{{ success }}</p>\n        </template>\n        <div class=\"flex flex-col sm:flex-row gap-1 max-w-[300px]\">\n          <button @click=\"confirmResetPassword\" class=\"bg-blue-600 text-white px-3 py-2 rounded hover:bg-blue-700 \n          focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 w-full\">Reset Password</button>\n          <button @click=\"confirmLogout\" class=\"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 \n          focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 w-full\">Logout</button>\n        </div>\n      </div>\n      <h2 class=\"text-xl font-bold mb-4 mt-4\">Leads:</h2>\n      <p v></p>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n        <div v-for=\"lead in leads\" :key=\"lead.id\" class=\"border p-4 rounded-lg shadow-md overflow-hidden break-words\">\n          <p><strong>First name:</strong> {{ lead.first_name }}</p>\n          <p><strong>Last name:</strong> {{ lead.last_name }}</p>\n          <p><strong>Email:</strong> {{ lead.email }}</p>\n          <p><strong>Phone number:</strong> {{ lead.phone }}</p>\n          <p><strong>Message:</strong> {{ lead.message }}</p>\n        </div>\n      </div>\n      <p class=\"text-red-500\">{{ error }}</p>\n    </div>\n  </Layout>\n</template>\n\n<script setup>\nimport {ref} from 'vue'\nimport axios from '@/axios'\nimport { useRouter } from 'vue-router';\n\nconst router = useRouter();\n\nconst user = ref(JSON.parse(localStorage.getItem('user')));\n\nconst leads = ref(null)\nconst error = ref('')\nconst success = ref('');\n\n\nconst getLeads = async () => {\n  try {\n    const response = await axios.get('/leads');\n    leads.value=response.data\n    \n    console.log(response.data);\n\n  } catch (err) {\n    console.log(err);\n\n    error.value = err.response?.data?.message || 'Login failed';\n  }\n};\n\nconst getUser = async () => {\n  try {\n    const response = await axios.get('/user');\n    user.value=response.data.user\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n    console.log(response.data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nconst confirmResetPassword = () => {\n  if (window.confirm(\"Are you sure you want to reset your password?\")) {\n    resetPassword();\n  }\n};\n\nconst resetPassword = async () => {\n  try {\n    await axios.post('/forgot-password');\n    alert('Password reset link has been sent to your email.')\n  } catch (error) {\n    console.error('Logout failed:', error);\n  }\n};\n\nconst confirmLogout = () => {\n  if (window.confirm(\"Are you sure you want to log out?\")) {\n    logout();\n  }\n};\n\nconst logout = async () => {\n  try {\n    await axios.post('/logout');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    router.push('/').then(() => {\n      setTimeout(() => {\n        window.location.reload();\n      }, 300)\n    });\n  } catch (error) {\n    console.error('Logout failed:', error);\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    router.push('/').then(() => {\n      setTimeout(() => {\n        window.location.reload();\n      }, 300)\n    });\n  }\n};\n\nconst resendConfirmationEmail = async () => {\n  try {\n    const response = await axios.post('/email/resend');\n    console.log(response);\n    success.value = 'Confirmation email has been resent.';\n    alert('Confirmation email has been sent!');\n  } catch (err) {\n    error.value = err.response?.data?.message || 'Failed to resend confirmation email.';\n  }\n};\n\ngetUser()\ngetLeads()\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}