{"ast":null,"code":"import { computed } from 'vue';\nimport { useRoute } from 'vue-router';\n\n// Get the current route\n\nexport default {\n  __name: 'AppHeader',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n\n    // Helper function to determine if the link is active\n    const isActive = path => route.path === path;\n\n    // Define all navigation links\n    const links = [{\n      name: 'Home',\n      path: '/'\n    }, {\n      name: 'Admin',\n      path: '/admin'\n    }, {\n      name: 'Login',\n      path: '/login'\n    }, {\n      name: 'Register',\n      path: '/register'\n    }];\n\n    // Compute filtered links based on user authentication\n    const filteredLinks = computed(() => {\n      const user = localStorage.getItem('user');\n      return links.filter(link => {\n        if (link.path === '/admin') {\n          return !!user; // Show Admin link only if user is authenticated\n        }\n        if (link.path === '/register') {\n          return !user; // Show Register link only if user is not authenticated\n        }\n        return true; // Show other links regardless of authentication\n      });\n    });\n    const __returned__ = {\n      route,\n      isActive,\n      links,\n      filteredLinks,\n      computed,\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","useRoute","route","isActive","path","links","name","filteredLinks","user","localStorage","getItem","filter","link"],"sources":["/home/abd/www/zadaniya/infoservice/front/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header class=\"bg-blue-600 text-white p-4\">\n    <div class=\"container mx-auto flex justify-between items-center\">\n      <h1 class=\"text-2xl font-bold\">InfoService</h1>\n      <nav>\n        <RouterLink\n          v-for=\"(link, index) in filteredLinks\"\n          :key=\"index\"\n          :to=\"link.path\"\n          class=\"mr-4 hover:underline cursor-pointer\"\n          :class=\"{ 'font-bold': isActive(link.path) }\"\n        >\n          {{ link.name }}\n        </RouterLink>\n      </nav>\n    </div>\n  </header>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRoute } from 'vue-router';\n\n// Get the current route\nconst route = useRoute();\n\n// Helper function to determine if the link is active\nconst isActive = (path) => route.path === path;\n\n// Define all navigation links\nconst links = [\n  { name: 'Home', path: '/' },\n  { name: 'Admin', path: '/admin' },\n  { name: 'Login', path: '/login' },\n  { name: 'Register', path: '/register' },\n];\n\n// Compute filtered links based on user authentication\nconst filteredLinks = computed(() => {\n  const user = localStorage.getItem('user');\n  return links.filter(link => {\n    if (link.path === '/admin') {\n      return !!user; // Show Admin link only if user is authenticated\n    }\n    if (link.path === '/register' ) {\n      return !user; // Show Register link only if user is not authenticated\n    }\n    return true; // Show other links regardless of authentication\n  });\n});\n</script>\n"],"mappings":"AAoBA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,QAAQ,QAAQ,YAAY;;AAErC;;;;;;;;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAME,QAAQ,GAAIC,IAAI,IAAKF,KAAK,CAACE,IAAI,KAAKA,IAAI;;IAE9C;IACA,MAAMC,KAAK,GAAG,CACZ;MAAEC,IAAI,EAAE,MAAM;MAAEF,IAAI,EAAE;IAAI,CAAC,EAC3B;MAAEE,IAAI,EAAE,OAAO;MAAEF,IAAI,EAAE;IAAS,CAAC,EACjC;MAAEE,IAAI,EAAE,OAAO;MAAEF,IAAI,EAAE;IAAS,CAAC,EACjC;MAAEE,IAAI,EAAE,UAAU;MAAEF,IAAI,EAAE;IAAY,CAAC,CACxC;;IAED;IACA,MAAMG,aAAa,GAAGP,QAAQ,CAAC,MAAM;MACnC,MAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACzC,OAAOL,KAAK,CAACM,MAAM,CAACC,IAAI,IAAI;QAC1B,IAAIA,IAAI,CAACR,IAAI,KAAK,QAAQ,EAAE;UAC1B,OAAO,CAAC,CAACI,IAAI,CAAC,CAAC;QACjB;QACA,IAAII,IAAI,CAACR,IAAI,KAAK,WAAW,EAAG;UAC9B,OAAO,CAACI,IAAI,CAAC,CAAC;QAChB;QACA,OAAO,IAAI,CAAC,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}